{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types'; // Register User\n\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/users', formData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hucot/Documents/School_Code/mern/social-network/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","formData","dispatch","res","api","post","type","payload","data","loadUser","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAA+C,SAA/C,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAkB;AACpD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,GAAG,CAACC,IAAJ,CAAS,QAAT,EAAmBJ,QAAnB,CAAlB;AAEAC,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,gBADC;AAEPS,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAACO,QAAQ,EAAT,CAAR;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBG,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIZ,QAAQ,CAACL,QAAQ,CAACiB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDb,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAGD;AACF,CApBM","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL} from './types';\r\n\r\n// Register User\r\nexport const register = formData => async dispatch => {\r\n  try {\r\n    const res = await api.post('/users', formData);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}